import { execSync } from 'child_process';
import https from 'https';
import fs from 'fs';
import path from 'path';

const repoPath = process.cwd();
const dataPath = path.join(repoPath, 'data');
const reposPath = path.join(dataPath, 'repositories.json');

console.log('=== Criando Reposit√≥rio no GitHub ===\n');

// Ler configura√ß√£o do reposit√≥rio
if (!fs.existsSync(reposPath)) {
  console.log('‚ùå Arquivo repositories.json n√£o encontrado');
  process.exit(1);
}

let repos;
try {
  repos = JSON.parse(fs.readFileSync(reposPath, 'utf8'));
} catch (error) {
  console.log('‚ùå Erro ao ler repositories.json:', error.message);
  process.exit(1);
}

if (repos.length === 0) {
  console.log('‚ùå Nenhum reposit√≥rio configurado');
  process.exit(1);
}

const repo = repos[0];
console.log(`üìÅ Reposit√≥rio: ${repo.name}`);

// Para criar o reposit√≥rio, precisamos de um token do GitHub
// Como n√£o temos token configurado, vamos mostrar as instru√ß√µes
console.log('\nüîë Token do GitHub necess√°rio para criar o reposit√≥rio');
console.log('\nüìã Instru√ß√µes para configurar:');
console.log('1. Acesse a aplica√ß√£o web em http://localhost:5173');
console.log('2. Clique em "Login with GitHub"');
console.log('3. Autorize a aplica√ß√£o no GitHub');
console.log('4. Volte para a aplica√ß√£o e configure o reposit√≥rio');

console.log('\nüõ†Ô∏è Alternativa manual:');
console.log('1. Acesse https://github.com/new');
console.log(`2. Crie um reposit√≥rio chamado "${repo.name}"`);
console.log('3. Deixe como p√∫blico ou privado conforme preferir');
console.log('4. N√ÉO inicialize com README, .gitignore ou licen√ßa');
console.log('5. Clique em "Create repository"');

console.log('\nüîÑ Ap√≥s criar o reposit√≥rio:');
console.log('1. Configure o token na aplica√ß√£o web');
console.log('2. Execute o push atrav√©s da aplica√ß√£o');

// Verificar se temos arquivos para fazer commit
try {
  const status = execSync('git status --porcelain', { cwd: repoPath, encoding: 'utf8' });
  if (status.trim()) {
    const fileCount = status.trim().split('\n').length;
    console.log(`\nüìù ${fileCount} arquivos prontos para commit`);
    console.log('\nüöÄ Comandos para push manual (ap√≥s configurar token):');
    console.log('git add .');
    console.log('git commit -m "Initial commit"');
    console.log('git push -u origin main');
  }
} catch (error) {
  console.log('‚ùå Erro ao verificar status:', error.message);
}